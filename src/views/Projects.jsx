import React, { useState, useContext } from "react";
import { ThemeContext } from "../themeProvider";
import { techStack } from "../icon";
import ABCImage from "../img/ABC.png";
import Safy from "../img/Safy.png";
import Meetic from "../img/Meetic.png";
import Cinema from "../img/cinema.jpg";
import ED from "../img/ED.png";
import Spotify from "../img/spotify.jpg";

// üß† Donn√©es des projets
  const projects = [
    {
      name: "Electro D√©p√¥t - Contribution professionnelle",
      shortDesc: "Mise en production de la homepage et cr√©ation de landing pages sous Magento.",
      image: ED,
      tags: ["Magento", "HTML", "CSS", "CMS", "Production", "SEO", "E-commerce"],
      link: "https://www.electrodepot.fr", // üîó Met le lien exact si sp√©cifique √† une landing
      presentation: `
        Dans le cadre de mon exp√©rience professionnelle chez **Electro D√©p√¥t**, j‚Äôai contribu√© √† la mise en production
        de la homepage du site e-commerce via le CMS **Magento**. Mon r√¥le a √©t√© d'assurer l'int√©gration des √©l√©ments
        visuels, la mise √† jour des blocs dynamiques, et la gestion du contenu selon les campagnes marketing en cours.
    
        J‚Äôai √©galement con√ßu et int√©gr√© plusieurs **landing pages informatives** destin√©es √† am√©liorer l‚Äôexp√©rience utilisateur
        et √† sensibiliser les clients sur des sujets comme la **consommation √©nerg√©tique** des appareils √©lectrom√©nagers.
        Ces pages combinaient √† la fois du contenu √©ditorial optimis√© pour le r√©f√©rencement, des √©l√©ments visuels engageants,
        et un respect strict de la charte graphique de l‚Äôentreprise.
      `,
      apprentissage: `
        Cette mission m‚Äôa permis de :
        - Me familiariser avec le CMS professionnel **Magento**.
        - Comprendre les processus de **mise en production en environnement e-commerce**.
        - Travailler en collaboration avec des √©quipes marketing, design et SEO.
        - Am√©liorer mes comp√©tences en **HTML/CSS orient√© CMS**.
        - Cr√©er des **pages √† forte valeur ajout√©e** en termes d‚ÄôUX et de contenu informatif.
        - Respecter les contraintes de temps et de validation propres au monde de l‚Äôentreprise.
    
        J‚Äôai √©galement renforc√© ma rigueur dans le suivi des versions et des validations clients, tout en assurant la coh√©rence visuelle
        sur desktop et mobile.
      `,
    },
    
    {
      name: "Maquette ABC",
      shortDesc: "Premi√®re int√©gration HTML/CSS selon une maquette impos√©e.",
      image: ABCImage,
      tags: ["HTML5", "CSS3", "Accessibilit√©"],
      link: "https://ton-lien.vercel.app", // üîó Ajoute ton vrai lien ici
      presentation: `
        Ce projet consistait √† reproduire fid√®lement une maquette graphique en HTML5 et CSS3, 
        tout en respectant les standards W3C et les bonnes pratiques de r√©f√©rencement naturel. 
        Il incluait √©galement l'int√©gration d'un player YouTube, l'utilisation de polices sp√©cifiques 
        (Oswald, Droid Sans, Droid Serif), et des consignes strictes sur l‚Äôaccessibilit√©.
      `,
      apprentissage: `
        - Ma√Ætrise des balises s√©mantiques HTML5
        - Structuration propre et maintenable du CSS
        - Importation et utilisation de polices personnalis√©es via @import
        - Int√©gration d‚Äôun lecteur vid√©o YouTube
        - Sensibilisation aux normes d‚Äôaccessibilit√©
        - Conformit√© aux standards W3C
      `,
    },
    {
      name: "Maquette Responsive",
      shortDesc: "Int√©gration d'une maquette responsive en HTML5, CSS3 et JavaScript.",
      image: Safy,
      tags: ["HTML5", "CSS3", "JavaScript", "Responsive", "BEM"],
      link: "https://ton-lien.vercel.app", // üîó Ajoute ton vrai lien ici
      presentation: `
        Ce projet consistait √† int√©grer une maquette responsive en respectant les standards du W3C,
        en utilisant HTML5, CSS3, et JavaScript. L‚Äôobjectif principal √©tait de rendre la page web
        accessible et fonctionnelle sur tous les types de supports (ordinateur, tablette, smartphone),
        tout en respectant une logique de structure claire avec la m√©thodologie BEM.
        
        L‚Äôint√©gration devait √©galement s‚Äôadapter dynamiquement selon la taille de l‚Äô√©cran, notamment
        en affichant des images en haute ou basse d√©finition selon la r√©solution. Le tout devait
        √©galement respecter des bonnes pratiques en mati√®re de SEO.
      `,
      apprentissage: `
        Gr√¢ce √† ce projet, j‚Äôai consolid√© mes comp√©tences en :
        - Int√©gration responsive √† l‚Äôaide de media queries.
        - Utilisation de la m√©thodologie BEM pour une structure CSS organis√©e.
        - Adaptation dynamique des images selon les tailles d‚Äô√©cran.
        - Respect des normes W3C pour un code propre et accessible.
        - Am√©lioration des performances et du r√©f√©rencement naturel.
        
        Ce projet m‚Äôa permis de mieux comprendre les enjeux de l‚Äôaccessibilit√©, de l‚Äôoptimisation
        et de l‚Äôadaptabilit√© d‚Äôun site web moderne.
      `,
    },
   
    {
      name: "my_meetic",
      shortDesc: "Site de rencontre inspir√© de Meetic avec PHP, JQuery et Ajax.",
      image: Meetic,
      tags: ["PHP", "JQuery", "Ajax", "POO", "HTML5", "CSS3"],
      link: "https://ton-lien.vercel.app", // üîó Remplace par le vrai lien d√©ploy√© si tu l‚Äôas
      presentation: `
        Le projet **my_meetic** consistait √† d√©velopper un site de rencontre en utilisant PHP orient√© objet, JQuery et Ajax, sans framework ni plugins externes.
        Le concept reprend celui de Meetic, mais cibl√© pour un √©tablissement scolaire, avec des profils filtrables selon plusieurs crit√®res :
        genre, ville, loisirs et tranche d'√¢ge.
    
        Les visiteurs peuvent s‚Äôinscrire ou se connecter via un formulaire s√©curis√©. Les utilisateurs connect√©s acc√®dent √† leur compte,
        peuvent modifier leurs informations ou supprimer leur compte (de mani√®re logique, sans DELETE SQL).
    
        Une page de recherche permet de filtrer dynamiquement les utilisateurs √† l‚Äôaide d‚Äôun carrousel cod√© en JQuery.
      `,
      apprentissage: `
        Ce projet m‚Äôa permis de :
        - Renforcer ma ma√Ætrise de **PHP orient√© objet**.
        - Manipuler le **DOM en JQuery** sans plugins.
        - G√©rer les appels AJAX pour une meilleure exp√©rience utilisateur.
        - Prot√©ger les donn√©es (hashage des mots de passe, validation front et back, pr√©vention des injections SQL).
        - Concevoir une **base de donn√©es relationnelle efficace**.
        - Impl√©menter des filtres complexes avec gestion dynamique c√¥t√© client.
        - Organiser un projet sans framework, en full vanilla PHP/JQuery.
    
        En bonus, j‚Äôai explor√© la mise en place d‚Äôune **messagerie** entre membres et d‚Äôun **carrousel interactif**.
      `,
    },
    {
      name: "My Cinema",
      shortDesc: "Site de gestion de cin√©ma en PHP/MySQL avec recherche, historique et abonnements.",
      image: Cinema,
      tags: ["PHP", "MySQL", "SQL", "HTML5", "CSS3", "JavaScript", "Bootstrap"],
      link: "https://ton-lien.vercel.app", // üîó Remplace par ton lien en ligne si dispo
      presentation: `
        Le projet **My Cinema** consiste √† cr√©er un site web qui permet d‚Äôinteragir avec une base de donn√©es
        de gestion de cin√©ma. L‚Äôapplication propose de nombreuses fonctionnalit√©s comme la recherche de films
        par genre, distributeur ou date, la gestion des abonnements clients, et l‚Äôaffichage de l‚Äôhistorique
        des films vus par chaque abonn√©.
    
        L‚Äôobjectif principal √©tait de ma√Ætriser la manipulation de donn√©es via PHP et MySQL, tout en s√©parant
        clairement la logique m√©tier de l‚Äôaffichage. Le site respecte les normes HTML5 et propose une
        pagination dynamique pour limiter les r√©sultats affich√©s √† l‚Äô√©cran.
      `,
      apprentissage: `
        Ce projet m‚Äôa permis de :
        - Approfondir mes comp√©tences en **PHP proc√©dural** et en **SQL**.
        - Manipuler et interroger efficacement une base de donn√©es **MySQL**.
        - G√©rer dynamiquement des filtres et des formulaires de recherche.
        - Cr√©er des relations entre les tables et assurer leur int√©grit√© (cl√© √©trang√®re, collation...).
        - Impl√©menter un syst√®me de pagination personnalisable.
        - Organiser un site structur√© avec une s√©paration claire entre logique et affichage.
    
        En bonus, j‚Äôai envisag√© des √©volutions possibles comme un **acc√®s client**, un **back-office admin**
        et un **syst√®me de planification de s√©ances en salle**.
      `,
    }    ,
    {
      name: "My Spotify",
      shortDesc: "Cr√©ation d‚Äôun lecteur musical en ligne avec React, API et JSON.",
      image: Spotify,
      tags: ["React", "API", "Docker", "HTML", "CSS", "JavaScript"],
      link: "https://ton-lien.vercel.app", // üîó Remplace par ton vrai lien d√©ploy√© si tu l‚Äôas
      presentation: `
        **My Spotify** est un projet de lecteur musical en ligne d√©velopp√© avec **React**, bas√© sur l‚Äôexploitation
        d‚Äôune **API REST** fournie via un container **Docker**. Le site permet de naviguer dans une base de
        donn√©es musicale, en affichant des listes pagin√©es et des d√©tails dynamiques pour les albums, artistes
        et genres.
    
        Il comporte plusieurs pages interactives : page d‚Äôaccueil avec albums al√©atoires, recherche globale,
        listing et d√©tails d‚Äôalbums, artistes et genres. Chaque album permet d‚Äô√©couter ses titres gr√¢ce √† un
        lecteur audio HTML5 int√©gr√©, emp√™chant la lecture simultan√©e de plusieurs musiques.
      `,
      apprentissage: `
        Ce projet m‚Äôa permis de :
        - Ma√Ætriser **React** pour cr√©er des composants dynamiques et r√©actifs.
        - Consommer une **API REST** locale avec **Axios** ou fetch, en manipulant du **JSON**.
        - G√©rer la **pagination** c√¥t√© front pour afficher les donn√©es progressivement.
        - Impl√©menter une **navigation** fluide avec React Router.
        - Utiliser un **lecteur audio HTML5** de mani√®re contr√¥l√©e (lecture exclusive).
        - Travailler avec **Docker** pour simuler une API distante.
        
        C‚Äôest un excellent projet pour comprendre le lien entre frontend React et backend API, tout en
        manipulant des concepts essentiels du d√©veloppement web moderne.
      `,
    },
    
  
  ];
  

const Project = () => {
  const { state } = useContext(ThemeContext);
  const darkMode = state.darkMode;

  const [selectedProject, setSelectedProject] = useState(null);
  const [activeTab, setActiveTab] = useState("presentation");

  // üé® Th√®me invers√©
  const bgClass = darkMode ? "bg-gray-100" : "bg-gray-900";
  const cardBg = darkMode ? "bg-white text-gray-800" : "bg-gray-800 text-white";
  const tagStyle = darkMode ? "bg-gray-200 text-gray-800" : "bg-gray-700 text-white";
  const modalBg = darkMode ? "bg-white text-gray-800" : "bg-gray-800 text-white";
  const overlayBg = "bg-black bg-opacity-60";
  const closeBtnColor = darkMode ? "text-gray-600 hover:text-red-500" : "text-gray-400 hover:text-red-400";

  // üîç R√©cup√®re l‚Äôic√¥ne pour chaque techno
  const getTechIcon = (name) => {
    const tech = techStack.find(t => t.name.toLowerCase() === name.toLowerCase());
    return tech ? tech.link : null;
  };

  return (
    <section id="projects" className={`${bgClass} py-20`}>
      <div className="max-w-7xl mx-auto px-6">
        <h2 className="text-3xl font-bold text-blue-500 mb-12 text-center">Projets</h2>

        {/* üñºÔ∏è Grille d‚Äôimages */}
        <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
          {projects.map((project, index) => (
            <div
              key={index}
              onClick={() => {
                setSelectedProject(project);
                setActiveTab("presentation");
              }}
              className="cursor-pointer rounded-xl overflow-hidden shadow-lg transform transition-transform duration-300 hover:scale-105 group"
            >
              <img
                src={project.image}
                alt={project.name}
                className="w-full h-60 object-cover transition-transform duration-300 group-hover:scale-110"
              />
              <div className={`${cardBg} p-4`}>
                <h3 className="text-lg font-bold">{project.name}</h3>
                <p className="text-sm">{project.shortDesc}</p>
                <div className="flex justify-between items-center mt-2">
                  <p className="text-red-500 font-medium">En savoir plus ‚Üí</p>
                  {project.link && (
                    <a
                      href={project.link}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-blue-500 underline text-sm hover:text-blue-700"
                      onClick={(e) => e.stopPropagation()} // ‚Üê pour √©viter d‚Äôouvrir la popup
                    >
                      Voir le projet
                    </a>
                  )}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* üí¨ Popup d√©taill√©e */}
      {selectedProject && (
        <div
          className={`fixed inset-0 z-50 flex items-center justify-center ${overlayBg}`}
          onClick={() => setSelectedProject(null)}
        >
          <div
            className={`${modalBg} max-w-2xl w-full mx-4 p-6 rounded-xl relative shadow-lg`}
            onClick={(e) => e.stopPropagation()}
          >
            <button
              onClick={() => setSelectedProject(null)}
              className={`absolute top-3 right-4 text-xl ${closeBtnColor}`}
            >
              ‚úï
            </button>

            <h3 className="text-2xl font-bold mb-4">{selectedProject.name}</h3>

            {/* Onglets */}
            <div className="flex gap-4 mb-6">
              <button
                onClick={() => setActiveTab("presentation")}
                className={`px-4 py-1 rounded-full text-sm font-medium ${
                  activeTab === "presentation"
                    ? "bg-blue-500 text-white"
                    : "bg-transparent border border-blue-500 text-blue-500"
                }`}
              >
                Pr√©sentation
              </button>
              <button
                onClick={() => setActiveTab("apprentissage")}
                className={`px-4 py-1 rounded-full text-sm font-medium ${
                  activeTab === "apprentissage"
                    ? "bg-blue-500 text-white"
                    : "bg-transparent border border-blue-500 text-blue-500"
                }`}
              >
                Apprentissage
              </button>
            </div>

            {/* Contenu actif */}
            <div className="text-sm whitespace-pre-line mb-4">
              {activeTab === "presentation"
                ? selectedProject.presentation
                : selectedProject.apprentissage}
            </div>

            {/* Tags avec ic√¥nes */}
            <div className="flex flex-wrap gap-2">
              {selectedProject.tags.map((tag, idx) => {
                const icon = getTechIcon(tag);
                return (
                  <div
                    key={idx}
                    className={`flex items-center gap-2 px-3 py-1 text-sm rounded-full ${tagStyle}`}
                  >
                    {icon && <img src={icon} alt={tag} className="w-5 h-5" />}
                    <span>{tag}</span>
                  </div>
                );
              })}
            </div>

            {/* Lien dans la popup (facultatif) */}
            {selectedProject.link && (
              <div className="mt-6 text-right">
                <a
                  href={selectedProject.link}
                  target="_blank"
                  rel="noopener noreferrer"
                  className="text-blue-500 underline hover:text-blue-700 text-sm"
                >
                  üîó Acc√©der au projet
                </a>
              </div>
            )}
          </div>
        </div>
      )}
    </section>
  );
};

export default Project;
